upstream localhost-esthenos {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).
  # server unix:/tmp/gunicorn_flask.sock fail_timeout=0;
  server 127.0.0.1:8080 fail_timeout=0;
}

server {
    listen 80;
    client_max_body_size 20M;
    gzip_types application/x-javascript text/css;

    location ~* ^/(static|assets)/(.*)\.(gif|jpg|jpeg|png|ico|bmp|js|css|pdf|doc)$ {
       root /home/ubuntu/esthenos/esthenos;
       access_log off;
       expires max;
       add_header Pragma public;
       add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }

    location / {
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Content-Type,Accept';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;

        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://localhost-esthenos;
    }

    location ~ '^/upload/assets/([^/]+)/(.*)$' {
        set $bucket $1;
        set $key $2;

        # Setup AWS Authorization header
        set $aws_signature '';

        # the only reason we need lua is to get the current date
        set_by_lua $now "return ngx.cookie_time(ngx.time())";

        #the  access key
        set $aws_access_key 'AKIAITWBEHC2SAGDFQSA';
        set $aws_secret_key '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';

        # the actual string to be signed
        # see: http://docs.amazonwebservices.com/AmazonS3/latest/dev/RESTAuthentication.html
        set $string_to_sign "$request_method\n\napplication/x-www-form-urlencoded\n\nx-amz-date:$now\n/$bucket/$key";

        # create the hmac signature
        set_hmac_sha1 $aws_signature $aws_secret_key $string_to_sign;
        # encode the signature with base64
        set_encode_base64 $aws_signature $aws_signature;
        proxy_set_header x-amz-date $now;
        proxy_set_header Authorization "AWS $aws_access_key:$aws_signature";

        rewrite .* /$key break;

        # we need to set the host header here in order to find the bucket
        proxy_set_header Host $bucket.s3.amazonaws.com;
        rewrite .* /$key break;

        # another solution would be to use the bucket in the url
        # rewrite .* /$bucket/$key break;
        # proxy_pass http://s3.amazonaws.com;
        resolver 8.8.8.8;
        proxy_pass http://$bucket.s3-ap-southeast-1.amazonaws.com
    }
}
